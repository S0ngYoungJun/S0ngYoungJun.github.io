{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./styles/main.css';// main.css 파일 import\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){const[posts,setPosts]=useState([]);const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[newPostText,setNewPostText]=useState('');useEffect(()=>{// 포스트 목록을 가져오는 로직\nconst fetchPosts=async()=>{try{const response=await axios.get('http://localhost:3001/api/posts');setPosts(response.data.posts);}catch(error){console.error(error);}};// 현재 로그인된 사용자의 정보를 가져오는 로직\nconst fetchUserData=async()=>{try{// 로컬 스토리지에서 토큰을 가져옴\nconst token=localStorage.getItem('token');if(token){// 토큰을 헤더에 추가하여 서버에 요청\nconst response=await axios.get('http://localhost:3001/api/user',{headers:{Authorization:\"Bearer \".concat(token)}});setUsername(response.data.username);setEmail(response.data.email);}}catch(error){console.error(error);}};fetchPosts();fetchUserData();},[]);const handlePostSubmit=async()=>{try{// 로컬 스토리지에서 토큰을 가져옴\nconst token=localStorage.getItem('token');// 토큰이 없다면 로그인 페이지로 이동하거나 다른 처리를 수행할 수 있습니다.\nif(!token){alert('로그인이 필요합니다.');// 로그인 페이지로 이동 또는 다른 처리\nreturn;}const response=await axios.post('http://localhost:3001/api/posts',{text:newPostText},{headers:{Authorization:\"Bearer \".concat(token)}});alert(response.data.message);setPosts([...posts,response.data.newPost]);setNewPostText('');}catch(error){console.error(error);alert('포스트 등록 실패');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:username}),/*#__PURE__*/_jsx(\"p\",{children:email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-form-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\uC548\\uB155\\uD558\\uC138\\uC694, \".concat(username,\"! \\uC5B4\\uB5A4 \\uC0DD\\uAC01\\uC744 \\uD558\\uACE0 \\uACC4\\uC2E0\\uAC00\\uC694?\"),value:newPostText,onChange:e=>setNewPostText(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePostSubmit,children:\"\\uD3EC\\uC2A4\\uD2B8\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"post-list-container\",children:posts.map(post=>/*#__PURE__*/_jsxs(\"div\",{className:\"post\",children:[/*#__PURE__*/_jsx(\"p\",{children:post.text}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uC791\\uC131\\uC790: \",post.username]})]},post.id))})]});}export default Main;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Main","posts","setPosts","username","setUsername","email","setEmail","newPostText","setNewPostText","fetchPosts","response","get","data","error","console","fetchUserData","token","localStorage","getItem","headers","Authorization","concat","handlePostSubmit","alert","post","text","message","newPost","className","children","placeholder","value","onChange","e","target","onClick","map","id"],"sources":["C:/Users/Administrator/Desktop/fareex/client/src/main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './styles/main.css'; // main.css 파일 import\r\n\r\nfunction Main() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [newPostText, setNewPostText] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 포스트 목록을 가져오는 로직\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/posts');\r\n        setPosts(response.data.posts);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    // 현재 로그인된 사용자의 정보를 가져오는 로직\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // 로컬 스토리지에서 토큰을 가져옴\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // 토큰을 헤더에 추가하여 서버에 요청\r\n          const response = await axios.get('http://localhost:3001/api/user', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUsername(response.data.username);\r\n          setEmail(response.data.email);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handlePostSubmit = async () => {\r\n    try {\r\n      // 로컬 스토리지에서 토큰을 가져옴\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // 토큰이 없다면 로그인 페이지로 이동하거나 다른 처리를 수행할 수 있습니다.\r\n      if (!token) {\r\n        alert('로그인이 필요합니다.');\r\n        // 로그인 페이지로 이동 또는 다른 처리\r\n        return;\r\n      }\r\n  \r\n      const response = await axios.post(\r\n        'http://localhost:3001/api/posts',\r\n        { text: newPostText },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n  \r\n      alert(response.data.message);\r\n      setPosts([...posts, response.data.newPost]);\r\n      setNewPostText('');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('포스트 등록 실패');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n\r\n      <div className=\"user-info\">\r\n        {/* 로그인된 사용자 정보 */}\r\n        <p>{username}</p>\r\n        <p>{email}</p>\r\n      </div>\r\n\r\n      <div className=\"post-form-container\">\r\n        {/* 포스트 작성 폼 */}\r\n        <textarea placeholder={`안녕하세요, ${username}! 어떤 생각을 하고 계신가요?`}\r\n        value={newPostText}\r\n        onChange={(e) => setNewPostText(e.target.value)} />\r\n        <button onClick={handlePostSubmit} >포스트</button>\r\n      </div>\r\n\r\n      <div className=\"post-list-container\">\r\n        {/* 포스트 목록 */}\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"post\">\r\n            <p>{post.text}</p>\r\n            <span>작성자: {post.username}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}