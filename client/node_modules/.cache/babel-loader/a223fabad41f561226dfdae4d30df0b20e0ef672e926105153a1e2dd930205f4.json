{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC1A1\\uBE75\\uC900\\\\Desktop\\\\\\uC791\\uC5C5\\\\fareex\\\\client\\\\src\\\\main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles/main.css'; // main.css 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // 포스트 목록을 가져오는 로직\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/posts');\n        setPosts(response.data.posts);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // 현재 로그인된 사용자의 정보를 가져오는 로직\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/user'); // 이 부분은 로그인 상태에 따라 변경되어야 합니다.\n        setUsername(response.data.username);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPosts();\n    fetchUserData();\n  }, []); // 빈 배열을 전달하여 한 번만 실행되도록 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: `안녕하세요, ${username}! 어떤 생각을 하고 계신가요?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uD3EC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC791\\uC131\\uC790: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"eJc9pa762mFJ1UHyrLjdvpLiRy8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Main","_s","posts","setPosts","username","setUsername","fetchPosts","response","get","data","error","console","fetchUserData","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","post","content","id","_c","$RefreshReg$"],"sources":["C:/Users/송빵준/Desktop/작업/fareex/client/src/main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './styles/main.css'; // main.css 파일 import\r\n\r\nfunction Main() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 포스트 목록을 가져오는 로직\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/posts');\r\n        setPosts(response.data.posts);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    // 현재 로그인된 사용자의 정보를 가져오는 로직\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/user'); // 이 부분은 로그인 상태에 따라 변경되어야 합니다.\r\n        setUsername(response.data.username);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n    fetchUserData();\r\n  }, []); // 빈 배열을 전달하여 한 번만 실행되도록 함\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"post-form-container\">\r\n        {/* 포스트 작성 폼 */}\r\n        <textarea placeholder={`안녕하세요, ${username}! 어떤 생각을 하고 계신가요?`} />\r\n        <button>포스트</button>\r\n      </div>\r\n\r\n      <div className=\"post-list-container\">\r\n        {/* 포스트 목록 */}\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"post\">\r\n            <p>{post.content}</p>\r\n            <span>작성자: {post.username}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACP,KAAK,CAAC;MAC/B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;;IAED;IACA,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACpEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACL,QAAQ,CAAC;MACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;IACZM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEb,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAElCf,OAAA;QAAUgB,WAAW,EAAG,UAASX,QAAS;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEpB,OAAA;QAAAe,QAAA,EAAQ;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAENpB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAEjCZ,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAmBc,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjCf,OAAA;UAAAe,QAAA,EAAIO,IAAI,CAACC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBpB,OAAA;UAAAe,QAAA,GAAM,sBAAK,EAACO,IAAI,CAACjB,QAAQ;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFzBE,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAhDQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAkDb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}